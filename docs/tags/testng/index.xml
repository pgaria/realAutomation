<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testng on Testing, Automation, Programming and Latest Technology Articles</title>
    <link>https://www.pawangaria.com/tags/testng/</link>
    <description>Recent content in Testng on Testing, Automation, Programming and Latest Technology Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>pawangaria@gmail.com (Pawan garia)</managingEditor>
    <webMaster>pawangaria@gmail.com (Pawan garia)</webMaster>
    <lastBuildDate>Sat, 23 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.pawangaria.com/tags/testng/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to run multiple Test Classes in TestNG?</title>
      <link>https://www.pawangaria.com/post/testng/how-to-run-multiple-class-in-testng/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/how-to-run-multiple-class-in-testng/</guid>
      <description>In TestNG, we can divide our test cases into multiple classes. Every class can have multiple @test methods.Sometimes Class represents a particular feature and all the test cases are inside the class. So in this article, we are going to learn how we can run multiple tests having multiple classes in TestNG.
Lets make few example test Classes: We will first make few Test Class with multiple @Test. To run all the Classes we should create a testng.</description>
    </item>
    
    <item>
      <title>How to Enable and Disable @Test in TestNG</title>
      <link>https://www.pawangaria.com/post/testng/enable-and-disable-test-in-testng/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/enable-and-disable-test-in-testng/</guid>
      <description>TestNG provides an attribute for enabling and disable our @Test. There are many times when you don&amp;rsquo;t want to run particular @Test and it&amp;rsquo;s not a better way to remove the whole Test method from the class and then add again if you want to run the @Test again.
 By default all the TestNG @Test methods are Enabled
 How to Enable and Disable @Test: To enable and disable @test, There is an attribute enabled which accepts Boolean type value as True or False.</description>
    </item>
    
    <item>
      <title>How to Skip @Test in TestNG</title>
      <link>https://www.pawangaria.com/post/testng/how-to-skip-test-in-testng/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/how-to-skip-test-in-testng/</guid>
      <description>Skipping test is also an important concept in TestNG. You can skip the test from running as you don&amp;rsquo;t want to Run the @test and mark the @test as Skip in reports.
To Skip the test we need to use org.testng.SkipException an Exception Class from TestNG. We have to throw an exception to the first line and code will come out from the test. You can have a look at Java document to read more about exception throwing.</description>
    </item>
    
    <item>
      <title>Expected Exceptions in TestNG</title>
      <link>https://www.pawangaria.com/post/testng/expected-exception-in-testng/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/expected-exception-in-testng/</guid>
      <description>All exceptions are not bad in our product, means we have to test and verify the exceptions in our product. The ExpectedException is a way of verifying that your code throws a specific exception.
 Verifying that code completes normally is important, but making sure the logic behaves as expected in failure and unexpected situations are also important.
 In TestNG, we have an attribute as expectedExceptions which needs to be added to our test where we have to verify the Exception as expected.</description>
    </item>
    
    <item>
      <title>TestNG Results: Success, Failure and Assert</title>
      <link>https://www.pawangaria.com/post/testng/testng-test-results/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/testng-test-results/</guid>
      <description>In testing Test is considered successful if it completed without throwing an exception or test successfully validated expected results. Sometimes @test threw an exception that was expected and we mark test as success. TestNG can not just decide what should be the results of the Test by himself, So we need to provide the expected data and expected conditions.
TestNG use the concept of Assert from Java and can be used for adding validation and conditions in your test cases.</description>
    </item>
    
    <item>
      <title>What is the TestNG.xml file?</title>
      <link>https://www.pawangaria.com/post/testng/what-is-testng-xml-file/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/what-is-testng-xml-file/</guid>
      <description>TestNG.xml file is an XML file which contains all the Test configuration and this XML file can be used to run and organize our test. TestNG eclipse plugin can be used to automatically generate testng.xml file so no need to write from scratch. In this article, we are going to learn about what is testng.xml and how to use testng.xml file to run our test.
Create Class with multiple @test methods: First, we need to create a simple class which contains multiple @test methods.</description>
    </item>
    
    <item>
      <title>What are TestNG Annotations?</title>
      <link>https://www.pawangaria.com/post/testng/what-are-testng-annotations/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/what-are-testng-annotations/</guid>
      <description>Before talking about annotations we should talk a little bit about why TestNG is required and what is the need for using any test management frameworks in our test.
All the tests are designed to allow you to quickly verify your application using a very large and diverse set of different data inputs. So test management tools are responsible for managing our test and provide many functionalities or you can say methods we can directly use in Test and no need to write the logic again like comparing two objects, pre-setup for Test, passing a different set of data and many more.</description>
    </item>
    
    <item>
      <title>What is TestNG?</title>
      <link>https://www.pawangaria.com/post/testng/what-is-testng/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/testng/what-is-testng/</guid>
      <description>TestNG is a test management framework inspired from JUnit and NUnit frameworks. TestNG provided and introduced new functionalities and features which make TestNg very powerful and mostly used test management framework in Java programming language. As per the creator of TestNG Mr. CÃ©dric Beust NG stands for next generation.
TestNG can be used in all the phases of testing like Unit testing, integration testing or system testing. TestNG provides better support compare to Junit and other frameworks as the new release and bug fixes are very frequent compared to Junit.</description>
    </item>
    
    <item>
      <title>Integrate Gurock TestRail with Automated TestCases in Java&#43;TestNG</title>
      <link>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</guid>
      <description>What is TestRail? Gurock TestRail is a modern and very nice tool for the Test Case Management by Quality Assurance and Development Team. TestManagement tools are very helpful for managing the test cases and TestRail is pack with very useful features like web-based application, Rest API integration etc.
Why to use TestManagement Tool with Automation? While making Regression or any kind of Test Automation suit there is a need of maintaining Use cases and maintain the repository which anyone can access and see what use cases are been automated and what is left.</description>
    </item>
    
  </channel>
</rss>