<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selenium Webdriver on Testing, Automation, Programming and Latest Technology Articles</title>
    <link>https://www.pawangaria.com/tags/selenium-webdriver/</link>
    <description>Recent content in Selenium Webdriver on Testing, Automation, Programming and Latest Technology Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>pawangaria@gmail.com (Pawan garia)</managingEditor>
    <webMaster>pawangaria@gmail.com (Pawan garia)</webMaster>
    <lastBuildDate>Sun, 03 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.pawangaria.com/tags/selenium-webdriver/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Selenium-WebDriver API commands work?</title>
      <link>https://www.pawangaria.com/post/automation/how-selenium-webdriver-api-commands-work/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/automation/how-selenium-webdriver-api-commands-work/</guid>
      <description>Selenium WebDriver provides cool interface API&amp;rsquo;s to perform many actions on the browser and simulate the user behaviors like the click or enter Text in the TextBoxes. There are many good articles about the WebDriver on the internet but the purpose of this article is to understand what happens in the background when we use actions like click, finding an element or getting title etc. I will be using Java as a programming language in this article.</description>
    </item>
    
    <item>
      <title>Understanding the Architecture of Selenium WebDriver</title>
      <link>https://www.pawangaria.com/post/automation/selenium-webdriver-architecture-using-json-wire-protocol/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/automation/selenium-webdriver-architecture-using-json-wire-protocol/</guid>
      <description>Selenium WebDriver provides a programming interface for driving the browser for automation testing. You can find the introduction of WebDriver in my other article. This article is more about the architecture and understanding how selenium WebDriver uses JSON Wire Protocol.
JSON Wire Protocol is an abstract specification of how automation behavior like clicking or typing or whatever you actually want to do with your automation script is mapped to selenium or appium or HTTP requests and response.</description>
    </item>
    
    <item>
      <title>What is Selenium WebDriver?</title>
      <link>https://www.pawangaria.com/post/automation/what-is-selenium-webdriver/</link>
      <pubDate>Tue, 28 Nov 2017 12:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/automation/what-is-selenium-webdriver/</guid>
      <description>Selenium WebDriver is an open source application for driving browsers for automation testing. Using WebDriver libraries you can drive the browser and perform actions like Click, Open URL, Enter Text, Clear Text, Take Screenshot of browser and many more actions. WebDriver works on a very simple principle of Client Server architecture. The communication between the server and client is through HTTP request and response.
WebDriver uses JSON wire protocol works on RESTful Web Services over HTTP.</description>
    </item>
    
    <item>
      <title>Integrate Gurock TestRail with Automated TestCases in Java&#43;TestNG</title>
      <link>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan garia)</author>
      <guid>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</guid>
      <description>What is TestRail? Gurock TestRail is a modern and very nice tool for the Test Case Management by Quality Assurance and Development Team. TestManagement tools are very helpful for managing the test cases and TestRail is pack with very useful features like web-based application, Rest API integration etc.
Why to use TestManagement Tool with Automation? While making Regression or any kind of Test Automation suit there is a need of maintaining Use cases and maintain the repository which anyone can access and see what use cases are been automated and what is left.</description>
    </item>
    
  </channel>
</rss>